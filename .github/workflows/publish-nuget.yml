name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*.*.*'

env:
  DOTNET_VERSION: '9.0'
  PROJECT_PATH: 'src/LinkSoft.ResourceGenerator/ResourceGenerator.csproj'

# Explicitly declare permissions
permissions:
  contents: write  # Needed for checkout and creating branches
  pull-requests: write  # Needed for creating PRs

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository 🛎️
      uses: actions/checkout@v4

    - name: Extract version from tag 🏷️
      id: extract_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Set up .NET 📦
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Update version in csproj 🔄
      run: sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.extract_version.outputs.version }}<\/Version>/" ${{ env.PROJECT_PATH }}

    - name: Restore dependencies 🔧
      run: dotnet restore

    - name: Build and pack 📦
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --output nuget_packages

    - name: Publish to NuGet 🚀
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push "nuget_packages/*.nupkg" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

    - name: Create branch and pull request 📂
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b "release-v${{ steps.extract_version.outputs.version }}"
        git add ${{ env.PROJECT_PATH }}
        git commit -m "Update version to ${{ steps.extract_version.outputs.version }}"
        git push origin "release-v${{ steps.extract_version.outputs.version }}"
        gh pr create --title "Release v${{ steps.extract_version.outputs.version }}" --body "This PR updates the version to v${{ steps.extract_version.outputs.version }}" --base main --head "release-v${{ steps.extract_version.outputs.version }}"